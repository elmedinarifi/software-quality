name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

  formatter:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run code-quality
        run: java -jar code-quality/checkstyle-10.23.0-all.jar -c code-quality/checkstyle.xml src/

  build:
    runs-on: ubuntu-latest
    needs: [setup, formatter]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          mvn -B package --file pom.xml
          echo "Built files in target directory:"
          ls -l target/

      - name: Rename JAR
        run: |
          echo "Looking for JAR files:"
          find target -name "*.jar"
          cp target/jabberpoint-1.0.0.jar JabberPoint.jar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: jabberpoint-jar
          path: JabberPoint.jar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run tests and generate coverage
        run: mvn test jacoco:report

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

  create_release:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: |
          # Get the latest tag, default to v1.7.0 if none exists
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then
            latest_tag="v1.7.0"
          fi
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Generate new version
        id: generate_version
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.latest_tag }}
          # Remove 'v' prefix
          version=${latest_tag#v}
          # Split into major, minor, patch
          IFS='.' read -r major minor patch <<< "$version"
          # Increment patch version
          if [ -z "$patch" ]; then
            new_version="v1.7.0"
          else
            new_patch=$((patch + 1))
            new_version="v$major.$minor.$new_patch"
          fi
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: jabberpoint-jar

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.generate_version.outputs.new_version }}
          name: Release ${{ steps.generate_version.outputs.new_version }}
          files: JabberPoint.jar
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}